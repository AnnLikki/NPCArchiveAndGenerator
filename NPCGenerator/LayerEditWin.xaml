<Window x:Class="NPCArchiveAndGenerator.LayerEditWin"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:NPCArchiveAndGenerator"
        mc:Ignorable="d"
        Title="Edit Layer" Height="500" Width="400">
    <Window.Resources>
        <SolidColorBrush x:Key="VeryLightColor" Color="#D6FFFF" />
        <SolidColorBrush x:Key="LightColor" Color="#ABFFFF" />
        <SolidColorBrush x:Key="BrightColor" Color="#75FFFF" />
        <SolidColorBrush x:Key="DarkColor" Color="#75F0F0" />
        <SolidColorBrush x:Key="VeryDarkColor" Color="#5FEBEB" />

        <local:GenderToCheckedConverter x:Key="GenderToCheckedConverter"/>

        <!-- Custom style for RadioButton to mimic ToggleButton -->
        <Style x:Key="ToggleButtonStyle" TargetType="RadioButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Grid>
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource VeryDarkColor}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource BrightColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="{StaticResource VeryLightColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>
    </Window.Resources>

    <Grid Background="{StaticResource VeryLightColor}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="35"/>
            <RowDefinition Height="35"/>
            <RowDefinition Height="35"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Label Grid.Row="0" Content="Edit Layer" Margin="5" FontWeight="SemiBold"/>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Label Grid.Column="0" Content="🛈 Chance" Margin="5"
                   ToolTip="A 0.0 - 1.0 (0% - 100%) chance that this layer will participate in generation."/>

            <Button Grid.Column="1" Width="15" Height="20" Content="-" Click="ChanceDecrement_Click" />
            <TextBox x:Name="ChanceTB" Grid.Column="2" Margin="5" VerticalContentAlignment="Center" IsReadOnly="True"/>
            <Button  Grid.Column="3" Width="15" Height="20" Content="+" Click="ChanceIncrement_Click" />


            <Label Grid.Column="4" Content="🛈 Default Value" Margin="5"
                   ToolTip="This value will be used in generation if the layer didn't pass the Chance."/>
            <TextBox x:Name="DefaultTB" Grid.Column="5" Margin="5" VerticalContentAlignment="Center" TextChanged="DefaultTB_TextChanged"/>
            
        </Grid>

        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0">
                
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="35"/>
                    <ColumnDefinition Width="35"/>
                    <ColumnDefinition Width="35"/>
                </Grid.ColumnDefinitions>

                <Label Grid.Column="0" Content="Gender" Margin="5"/>
                <RadioButton x:Name="MaleBtn" Grid.Column="1" Style="{StaticResource ToggleButtonStyle}" Margin="2" Checked="MaleBtn_Checked">
                    <Image Source="/Images/male.png" />
                </RadioButton>
                <RadioButton x:Name="FemaleBtn" Grid.Column="2" Style="{StaticResource ToggleButtonStyle}" Margin="2" Checked="FemaleBtn_Checked">
                    <Image Source="/Images/female.png" />
                </RadioButton>
                <RadioButton x:Name="NeutralBtn" Grid.Column="3" Style="{StaticResource ToggleButtonStyle}" Margin="2" Checked="NeutralBtn_Checked">
                    <Image Source="/Images/neuter.png" />
                </RadioButton>

            </Grid>
            <Grid Grid.Column="1" HorizontalAlignment="Center" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="40"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="40"/>
                </Grid.ColumnDefinitions>
                <Label Grid.Column="0" Content="Biological ages from" Margin="0,5,0,5"/>
                <TextBox x:Name="AgeFromTB" Grid.Column="1" Margin="2,7,2,7" VerticalContentAlignment="Center" PreviewTextInput="numeric_PreviewTextInput" TextChanged="AgeFromTB_TextChanged"/>
                <Label Grid.Column="2" Content="to" Margin="0,5,0,5"/>
                <TextBox x:Name="AgeToTB" Grid.Column="3" Margin="2,7,2,7" VerticalContentAlignment="Center" PreviewTextInput="numeric_PreviewTextInput" TextChanged="AgeToTB_TextChanged"/>
            </Grid>
        </Grid>
        <Grid Grid.Row="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="35"/>
                <ColumnDefinition Width="35"/>
                <ColumnDefinition Width="35"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="35"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="ImportElementsBtn" Grid.Column="0" Margin="5" Click="ImportElementsBtn_Click" ToolTip="Import data from txt">
                <Image Source="/Images/import.png" />
            </Button>
            <Button x:Name="ExportElementsBtn" Grid.Column="1" Margin="5" Click="ExportElementsBtn_Click" ToolTip="Export data to txt">
                <Image Source="/Images/export.png" />
            </Button>
            <Button x:Name="AddElementBtn" Grid.Column="2" Margin="5" Click="AddElementBtn_Click">
                <Image Source="/Images/add.png" />
            </Button>
            <Label Grid.Column="3" Content="Elements" VerticalContentAlignment="Center" FontSize="14" />

            <Button x:Name="RefreshBtn" Grid.Column="4" Margin="5" Click="RefreshBtn_Click" ToolTip="Update percentage">
                <Image Source="/Images/refresh.png" />
            </Button>
        </Grid>

        <DataGrid x:Name="ElemsDG" ItemsSource="{Binding Elements}" Grid.Row="4" AutoGenerateColumns="False" IsReadOnly="True" CanUserResizeColumns="False" CanUserResizeRows="False"
            ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Auto"
            SelectionMode="Single" Background="{StaticResource VeryLightColor}" CanUserSortColumns="False" CanUserReorderColumns="False" 
          CanUserAddRows="False" CanUserDeleteRows="False" Margin="5" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Disabled">

            <!--#region Styles -->
            <DataGrid.Resources>
                <Style TargetType="DataGridCell">
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                </Style>
                <Style TargetType="DataGridRow">
                    <Setter Property="Background" Value="White"/>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{StaticResource DarkColor}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.Resources>
            <!--#endregion-->

            <DataGrid.Columns>
                <DataGridTemplateColumn Header="Value" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Button x:Name="DeleteElemBtn" Grid.Column="0" Width="20" Height="20" Margin="2" Click="DeleteElemBtn_Click">
                                    <Image Source="/Images/delete.png" />
                                </Button>
                                <TextBox x:Name="ValueTB" Grid.Column="1" VerticalAlignment="Center" Text="{Binding Value}" TextChanged="ValueTB_TextChanged"/>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Gender" Width="Auto">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" Height="20">

                                <RadioButton x:Name="MaleBtn" IsChecked="{Binding Gender, Mode=OneWay, Converter={StaticResource GenderToCheckedConverter}, ConverterParameter=0}" Style="{StaticResource ToggleButtonStyle}" Margin="2" Checked="MaleBtn_Checked_1">
                                    <Image Source="/Images/male.png" />
                                </RadioButton>

                                <RadioButton x:Name="FemaleBtn" IsChecked="{Binding Gender, Mode=OneWay, Converter={StaticResource GenderToCheckedConverter}, ConverterParameter=1}" Style="{StaticResource ToggleButtonStyle}" Margin="2" Checked="FemaleBtn_Checked_1">
                                    <Image Source="/Images/female.png" />
                                </RadioButton>

                                <RadioButton x:Name="NeutralBtn" IsChecked="{Binding Gender, Mode=OneWay, Converter={StaticResource GenderToCheckedConverter}, ConverterParameter=2}" Style="{StaticResource ToggleButtonStyle}" Margin="2" Checked="NeutralBtn_Checked_1">
                                    <Image Source="/Images/neuter.png" />
                                </RadioButton>

                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Weight" Width="Auto">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox x:Name="WeightTB" VerticalAlignment="Center" Text="{Binding Weight}" TextChanged="WeightTB_TextChanged" PreviewTextInput="numeric_PreviewTextInput"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                
                <DataGridTemplateColumn Header="Percentage" Width="Auto">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock HorizontalAlignment="Center" Text="{Binding Converter={StaticResource LayerElemsPercentageConverter}}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>

    </Grid>
</Window>
